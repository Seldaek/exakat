name = "Don't Send This In Constructor";
description = "Don't use ``$this``` as an argument while in the __construct(). Until the constructor is finished, the object is not finished, and may be in an instable state. Providing it to another code may lead to error. 

This is in particular true if the receiving structure put immediately the incoming objet to work, and not simply store it for later use. 

<?php

// $this is only provided when Foo is constructed
class Foo {
    private $bar = null;
    private $data = array();
    
    static public function build($data) {
        $foo = new Foo($data);
        // Can't build in one call. Must make it separate.
        $foo->finalize();
    }

    private function __construct($data) {
        // $this is provided too early
        $this->data = $data;
    }
    
    function finalize() {
        $this->bar = new Bar($this);
    }
}

// $this is provided too early, leading to error in Bar
class Foo2 extends Foo {
    private $bar = null;
    private $data = array();
    
    function __construct($data) {
        // $this is provided too early
        $this->bar = new Bar($this);
        $this->data = $data;
    }
}

class Bar {
    function __construct(Foo $foo) {
        // the cache is now initialized with a wrong 
        $this->cache = $foo->getIt();
    }
}

?>

See also `Don't pass this out of a constructor <http://www.javapractices.com/topic/TopicAction.do?Id=252>`_.

";
clearphp = "";
exakatSince = "1.0.4";